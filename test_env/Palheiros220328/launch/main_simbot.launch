<!-- mission file for GADEN player -->

<launch>
    <arg name="gadenPATH" default="/home/hm/GadenSimulations/" />
    <!-- <arg name="cfdPATH" default="/media/rprb/Data1TB/CFD" /> -->
    <!-- <arg name="datasetWind" default="sim_1ms/palh_1ms_" /> -->
    <arg name="scenario" default="Palheiros220328" />
    <!-- <arg name="simulation" default="05_30_100_50_02" /> -->

    <!-- change iterations for this river file-->
    <!-- <arg name="simulation" default="1000_27_10_180_0001" />-->

     <arg name="simulation" default="50_500_10_200_005_sim80" />

    # OdorSource 1
    <arg name="source_location_x" default="-82.50" />
    <arg name="source_location_y" default="170.00" />
    <arg name="source_location_z" default="3.00" />



    <node name="map_server" pkg="map_server" type="map_server" args="$(arg gadenPATH)/$(arg scenario)_robot/occupancy.yaml">
      <param name="frame_id" value="occ_map"/>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="occ_broadcaster" args="0 0 0 0 0 0 local_map occ_map 100" />


    ### RVIZ ###
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find test_env)/$(arg scenario)/launch/gaden.rviz"/>


     ### NODE environment (for RVIZ visualization) ###
    <node pkg="gaden_environment" type="environment" name="environment" output="screen">
        <param name="verbose" value="true"/>
        <param name="wait_preprocessing" value="false"/>    	  ### wait for the ok from gaden_preprocessing before running
        <param name="fixed_frame" value="local_map"/>

        # Plot CAD models (Collada format .dae)
        <param name="number_of_CAD" value="1"/>
        <rosparam subst_value="True">
            CAD_0: file://$(arg gadenPATH)/$(arg scenario)/cad_models/heightmap.stl
            CAD_0_color: [0.92, 0.96, 0.96]
        </rosparam>

        # Plot 3D OccupancyGridmap

        <param name="occupancy3D_data" value="$(arg gadenPATH)/$(arg scenario)/OccupancyGrid3D.csv" />


        # Plot gas sources
        <param name="number_of_sources" value="1"/>
        <param name="source_0_position_x" value="$(arg source_location_x)"/>
        <param name="source_0_position_y" value="$(arg source_location_y)"/>
        <param name="source_0_position_z" value="$(arg source_location_z)"/>
        <rosparam>
            source_0_scale: 1
            source_0_color: [0.0, 1.0, 0.0]
        </rosparam>
    </node>



    ### NODE PLAYER ###
    #-------------------
    <node pkg="gaden_player" type="gaden_player" name="gaden_player" output="screen">
    
      <param name="verbose" value="true" />
	    <param name="player_freq" value="1" />         ###(Hz) Freq for loading the simulation log_files
	    <param name="initial_iteration" value="800" />
	    <param name="num_simulators" value="1" />      ### Number of simulations to load [1-inf] (useful for multiple sources and gases)
      <param name="fixed_frame" value="local_map"/>
      <param name="scale_filament" value="1"/>
      <param name="conc_threshold" value="0"/>
      

      <param name="occupancyFile" value="$(arg gadenPATH)/$(arg scenario)/OccupancyGrid3D.csv" />

      # Data from the "filament_simulator" pkg. Multiple sources can be set here
      <param name="simulation_data_0" value="$(arg gadenPATH)/$(arg scenario)/gas_simulations/$(arg simulation)/FilamentSimulation_gasType_0_sourcePosition_$(arg source_location_x)_$(arg source_location_y)_$(arg source_location_z)" />
      <!-- <param name="simulation_data_0" value="/home/rprb/catkin_ws/src/gaden/test_env/Palheiros220323/gas_simulations/$(arg simulation)/FilamentSimulation_gasType_0_sourcePosition_$(arg source_location_x)_$(arg source_location_y)_$(arg source_location_z)" /> -->

      # Loop options
      <param name="allow_looping" value="true" />
      <param name="loop_from_iteration" value="700" />
      <param name="loop_to_iteration" value="1799" />

    </node>




 


  <group ns="boat1/PID4">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="boat1_PID4" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="boat1_pid4_frame" />
        <param name="/fixed_frame" value="local_map"/>
        <param name="/noise_std" value="0.0"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat1_pid4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat1_local_base_link boat1_pid4_frame 100" />










  <group ns="boat2/PID4">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="boat2_PID4" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="boat2_pid4_frame" />
        <param name="/fixed_frame" value="local_map"/>
        <param name="/noise_std" value="0.0"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat2_pid4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat2_local_base_link boat2_pid4_frame 100" />





  <group ns="boat3/PID4">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="boat3_PID4" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="boat3_pid4_frame" />
        <param name="/fixed_frame" value="local_map"/>
        <param name="/noise_std" value="0.0"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat3_pid4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat3_local_base_link boat3_pid4_frame 100" />





  <group ns="boat4/PID4">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="boat4_PID4" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="boat4_pid4_frame" />
        <param name="/fixed_frame" value="local_map"/>
        <param name="/noise_std" value="0.0"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat4_pid4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat4_local_base_link boat4_pid4_frame 100" />





  <group ns="boat5/PID4">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="boat5_PID4" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="boat5_pid4_frame" />
        <param name="/fixed_frame" value="local_map"/>
        <param name="/noise_std" value="0.0"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat5_pid4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat5_local_base_link boat5_pid4_frame 100" />



  <group ns="boat6/PID4">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="boat6_PID4" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="boat6_pid4_frame" />
        <param name="/fixed_frame" value="local_map"/>
        <param name="/noise_std" value="0.0"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat6_pid4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat6_local_base_link boat6_pid4_frame 100" />



  <group ns="boat7/PID4">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="boat7_PID4" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="boat7_pid4_frame" />
        <param name="/fixed_frame" value="local_map"/>
        <param name="/noise_std" value="0.0"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat7_pid4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat7_local_base_link boat7_pid4_frame 100" />



  <group ns="boat8/PID4">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="boat8_PID4" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="boat8_pid4_frame" />
        <param name="/fixed_frame" value="local_map"/>
        <param name="/noise_std" value="0.0"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat8_pid4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat8_local_base_link boat8_pid4_frame 100" />


  <group ns="boat9/PID4">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="boat9_PID4" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="boat9_pid4_frame" />
        <param name="/fixed_frame" value="local_map"/>
        <param name="/noise_std" value="0.0"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat9_pid4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat9_local_base_link boat9_pid4_frame 100" />



<!-- with fast gaden, wind does not work
  <group ns="boat1/Anemometer4">
    <node pkg="simulated_anemometer" type="simulated_anemometer" name="boat1_anemometer4" output="screen">
      <param name="/sensor_frame" value="boat1_anemometer4_frame" />
      <param name="/fixed_frame" value="local_map"/>
      <param name="/noise_std" value="0.0"/>
      <param name="/use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat1_anemometer4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat1_local_base_link boat1_anemometer4_frame 100" />


 

  <group ns="boat2/Anemometer4">
    <node pkg="simulated_anemometer" type="simulated_anemometer" name="boat2_anemometer4" output="screen">
      <param name="/sensor_frame" value="boat2_anemometer4_frame" />
      <param name="/fixed_frame" value="local_map"/>
      <param name="/noise_std" value="0.0"/>
      <param name="/use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat2_anemometer4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat2_local_base_link boat2_anemometer4_frame 100" />





  <group ns="boat3/Anemometer4">
    <node pkg="simulated_anemometer" type="simulated_anemometer" name="boat3_anemometer4" output="screen">
      <param name="/sensor_frame" value="boat3_anemometer4_frame" />
      <param name="/fixed_frame" value="local_map"/>
      <param name="/noise_std" value="0.0"/>
      <param name="/use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat3_anemometer4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat3_local_base_link boat3_anemometer4_frame 100" />




  <group ns="boat4/Anemometer4">
    <node pkg="simulated_anemometer" type="simulated_anemometer" name="boat4_anemometer4" output="screen">
      <param name="/sensor_frame" value="boat4_anemometer4_frame" />
      <param name="/fixed_frame" value="local_map"/>
      <param name="/noise_std" value="0.0"/>
      <param name="/use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat4_anemometer4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat4_local_base_link boat4_anemometer4_frame 100" />





  <group ns="boat5/Anemometer4">
    <node pkg="simulated_anemometer" type="simulated_anemometer" name="boat5_anemometer4" output="screen">
      <param name="/sensor_frame" value="boat5_anemometer4_frame" />
      <param name="/fixed_frame" value="local_map"/>
      <param name="/noise_std" value="0.0"/>
      <param name="/use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat5_anemometer4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat5_local_base_link boat5_anemometer4_frame 100" />



  <group ns="boat6/Anemometer4">
    <node pkg="simulated_anemometer" type="simulated_anemometer" name="boat6_anemometer4" output="screen">
      <param name="/sensor_frame" value="boat6_anemometer4_frame" />
      <param name="/fixed_frame" value="local_map"/>
      <param name="/noise_std" value="0.0"/>
      <param name="/use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat6_anemometer4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat6_local_base_link boat6_anemometer4_frame 100" />



  <group ns="boat7/Anemometer4">
    <node pkg="simulated_anemometer" type="simulated_anemometer" name="boat7_anemometer4" output="screen">
      <param name="/sensor_frame" value="boat7_anemometer4_frame" />
      <param name="/fixed_frame" value="local_map"/>
      <param name="/noise_std" value="0.0"/>
      <param name="/use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat7_anemometer4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat7_local_base_link boat7_anemometer4_frame 100" />


  <group ns="boat8/Anemometer4">
    <node pkg="simulated_anemometer" type="simulated_anemometer" name="boat8_anemometer4" output="screen">
      <param name="/sensor_frame" value="boat8_anemometer4_frame" />
      <param name="/fixed_frame" value="local_map"/>
      <param name="/noise_std" value="0.0"/>
      <param name="/use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat8_anemometer4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat8_local_base_link boat8_anemometer4_frame 100" />


  <group ns="boat9/Anemometer4">
    <node pkg="simulated_anemometer" type="simulated_anemometer" name="boat9_anemometer4" output="screen">
      <param name="/sensor_frame" value="boat9_anemometer4_frame" />
      <param name="/fixed_frame" value="local_map"/>
      <param name="/noise_std" value="0.0"/>
      <param name="/use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="boat9_anemometer4_broadcaster" args="0.0 0.0 3.0 0 0 0 boat9_local_base_link boat9_anemometer4_frame 100" />
-->

</launch>
